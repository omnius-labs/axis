// <auto-generated/>
#nullable enable

namespace Omnius.Axus.Engine.Models;

public sealed partial class Shout : global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Engine.Models.Shout>, global::System.IDisposable
{
    public static global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Axus.Engine.Models.Shout> Formatter => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Engine.Models.Shout>.Formatter;
    public static global::Omnius.Axus.Engine.Models.Shout Empty => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Engine.Models.Shout>.Empty;

    static Shout()
    {
        global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Engine.Models.Shout>.Formatter = new ___CustomFormatter();
        global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Engine.Models.Shout>.Empty = new global::Omnius.Axus.Engine.Models.Shout(global::Omnius.Core.RocketPack.Utf8String.Empty, global::Omnius.Core.RocketPack.Timestamp64.Zero, global::Omnius.Core.MemoryOwner<byte>.Empty, null);
    }

    private readonly global::System.Lazy<int> ___hashCode;

    public static readonly int MaxChannelLength = 256;
    public static readonly int MaxValueLength = 33554432;

    public Shout(global::Omnius.Core.RocketPack.Utf8String channel, global::Omnius.Core.RocketPack.Timestamp64 createdTime, global::System.Buffers.IMemoryOwner<byte> value, global::Omnius.Core.Cryptography.OmniCertificate? certificate)
    {
        if (channel is null) throw new global::System.ArgumentNullException("channel");
        if (channel.Length > 256) throw new global::System.ArgumentOutOfRangeException("channel");
        if (value is null) throw new global::System.ArgumentNullException("value");
        if (value.Memory.Length > 33554432) throw new global::System.ArgumentOutOfRangeException("value");
        this.Channel = channel;
        this.CreatedTime = createdTime;
        this.Value = value;
        this.Certificate = certificate;

        ___hashCode = new global::System.Lazy<int>(() =>
        {
            var ___h = new global::System.HashCode();
            if (!channel.IsEmpty) ___h.Add(channel.GetHashCode());
            if (createdTime != default) ___h.Add(createdTime.GetHashCode());
            if (!value.Memory.IsEmpty) ___h.Add(global::Omnius.Core.Helpers.ObjectHelper.GetHashCode(value.Memory.Span));
            if (certificate != default) ___h.Add(certificate.GetHashCode());
            return ___h.ToHashCode();
        });
    }

    public void Dispose()
    {
        this.Value.Dispose();
    }

    public global::Omnius.Core.RocketPack.Utf8String Channel { get; }
    public global::Omnius.Core.RocketPack.Timestamp64 CreatedTime { get; }
    public global::System.Buffers.IMemoryOwner<byte> Value { get; }
    public global::Omnius.Core.Cryptography.OmniCertificate? Certificate { get; }

    public static global::Omnius.Axus.Engine.Models.Shout Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
    {
        var reader = new global::Omnius.Core.RocketPack.RocketMessageReader(sequence, bytesPool);
        return Formatter.Deserialize(ref reader, 0);
    }
    public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
    {
        var writer = new global::Omnius.Core.RocketPack.RocketMessageWriter(bufferWriter, bytesPool);
        Formatter.Serialize(ref writer, this, 0);
    }

    public static bool operator ==(global::Omnius.Axus.Engine.Models.Shout? left, global::Omnius.Axus.Engine.Models.Shout? right)
    {
        return (right is null) ? (left is null) : right.Equals(left);
    }
    public static bool operator !=(global::Omnius.Axus.Engine.Models.Shout? left, global::Omnius.Axus.Engine.Models.Shout? right)
    {
        return !(left == right);
    }
    public override bool Equals(object? other)
    {
        if (other is not global::Omnius.Axus.Engine.Models.Shout) return false;
        return this.Equals((global::Omnius.Axus.Engine.Models.Shout)other);
    }
    public bool Equals(global::Omnius.Axus.Engine.Models.Shout? target)
    {
        if (target is null) return false;
        if (object.ReferenceEquals(this, target)) return true;
        if (this.Channel != target.Channel) return false;
        if (this.CreatedTime != target.CreatedTime) return false;
        if (!global::Omnius.Core.BytesOperations.Equals(this.Value.Memory.Span, target.Value.Memory.Span)) return false;
        if ((this.Certificate is null) != (target.Certificate is null)) return false;
        if ((this.Certificate is not null) && (target.Certificate is not null) && this.Certificate != target.Certificate) return false;

        return true;
    }
    public override int GetHashCode() => ___hashCode.Value;

    private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Axus.Engine.Models.Shout>
    {
        public void Serialize(ref global::Omnius.Core.RocketPack.RocketMessageWriter w, scoped in global::Omnius.Axus.Engine.Models.Shout value, scoped in int rank)
        {
            if (rank > 256) throw new global::System.FormatException();

            if (value.Channel != global::Omnius.Core.RocketPack.Utf8String.Empty)
            {
                w.Write((uint)1);
                w.Write(value.Channel);
            }
            if (value.CreatedTime != global::Omnius.Core.RocketPack.Timestamp64.Zero)
            {
                w.Write((uint)2);
                w.Write(value.CreatedTime);
            }
            if (!value.Value.Memory.IsEmpty)
            {
                w.Write((uint)3);
                w.Write(value.Value.Memory.Span);
            }
            if (value.Certificate != null)
            {
                w.Write((uint)4);
                global::Omnius.Core.Cryptography.OmniCertificate.Formatter.Serialize(ref w, value.Certificate, rank + 1);
            }
            w.Write((uint)0);
        }
        public global::Omnius.Axus.Engine.Models.Shout Deserialize(ref global::Omnius.Core.RocketPack.RocketMessageReader r, scoped in int rank)
        {
            if (rank > 256) throw new global::System.FormatException();

            global::Omnius.Core.RocketPack.Utf8String p_channel = global::Omnius.Core.RocketPack.Utf8String.Empty;
            global::Omnius.Core.RocketPack.Timestamp64 p_createdTime = global::Omnius.Core.RocketPack.Timestamp64.Zero;
            global::System.Buffers.IMemoryOwner<byte> p_value = global::Omnius.Core.MemoryOwner<byte>.Empty;
            global::Omnius.Core.Cryptography.OmniCertificate? p_certificate = null;

            for (; ; )
            {
                uint id = r.GetUInt32();
                if (id == 0) break;
                switch (id)
                {
                    case 1:
                        {
                            p_channel = r.GetString(256);
                            break;
                        }
                    case 2:
                        {
                            p_createdTime = r.GetTimestamp64();
                            break;
                        }
                    case 3:
                        {
                            p_value = r.GetRecyclableMemory(33554432);
                            break;
                        }
                    case 4:
                        {
                            p_certificate = global::Omnius.Core.Cryptography.OmniCertificate.Formatter.Deserialize(ref r, rank + 1);
                            break;
                        }
                }
            }

            return new global::Omnius.Axus.Engine.Models.Shout(p_channel, p_createdTime, p_value, p_certificate);
        }
    }
}
public sealed partial class AttachedProperty : global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Engine.Models.AttachedProperty>
{
    public static global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Axus.Engine.Models.AttachedProperty> Formatter => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Engine.Models.AttachedProperty>.Formatter;
    public static global::Omnius.Axus.Engine.Models.AttachedProperty Empty => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Engine.Models.AttachedProperty>.Empty;

    static AttachedProperty()
    {
        global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Engine.Models.AttachedProperty>.Formatter = new ___CustomFormatter();
        global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Engine.Models.AttachedProperty>.Empty = new global::Omnius.Axus.Engine.Models.AttachedProperty(global::Omnius.Core.RocketPack.Utf8String.Empty);
    }

    private readonly global::System.Lazy<int> ___hashCode;

    public static readonly int MaxValueLength = 8192;

    public AttachedProperty(global::Omnius.Core.RocketPack.Utf8String value)
    {
        if (value is null) throw new global::System.ArgumentNullException("value");
        if (value.Length > 8192) throw new global::System.ArgumentOutOfRangeException("value");

        this.Value = value;

        ___hashCode = new global::System.Lazy<int>(() =>
        {
            var ___h = new global::System.HashCode();
            if (!value.IsEmpty) ___h.Add(value.GetHashCode());
            return ___h.ToHashCode();
        });
    }

    public global::Omnius.Core.RocketPack.Utf8String Value { get; }

    public static global::Omnius.Axus.Engine.Models.AttachedProperty Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
    {
        var reader = new global::Omnius.Core.RocketPack.RocketMessageReader(sequence, bytesPool);
        return Formatter.Deserialize(ref reader, 0);
    }
    public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
    {
        var writer = new global::Omnius.Core.RocketPack.RocketMessageWriter(bufferWriter, bytesPool);
        Formatter.Serialize(ref writer, this, 0);
    }

    public static bool operator ==(global::Omnius.Axus.Engine.Models.AttachedProperty? left, global::Omnius.Axus.Engine.Models.AttachedProperty? right)
    {
        return (right is null) ? (left is null) : right.Equals(left);
    }
    public static bool operator !=(global::Omnius.Axus.Engine.Models.AttachedProperty? left, global::Omnius.Axus.Engine.Models.AttachedProperty? right)
    {
        return !(left == right);
    }
    public override bool Equals(object? other)
    {
        if (other is not global::Omnius.Axus.Engine.Models.AttachedProperty) return false;
        return this.Equals((global::Omnius.Axus.Engine.Models.AttachedProperty)other);
    }
    public bool Equals(global::Omnius.Axus.Engine.Models.AttachedProperty? target)
    {
        if (target is null) return false;
        if (object.ReferenceEquals(this, target)) return true;
        if (this.Value != target.Value) return false;

        return true;
    }
    public override int GetHashCode() => ___hashCode.Value;

    private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Axus.Engine.Models.AttachedProperty>
    {
        public void Serialize(ref global::Omnius.Core.RocketPack.RocketMessageWriter w, scoped in global::Omnius.Axus.Engine.Models.AttachedProperty value, scoped in int rank)
        {
            if (rank > 256) throw new global::System.FormatException();

            if (value.Value != global::Omnius.Core.RocketPack.Utf8String.Empty)
            {
                w.Write((uint)1);
                w.Write(value.Value);
            }
            w.Write((uint)0);
        }
        public global::Omnius.Axus.Engine.Models.AttachedProperty Deserialize(ref global::Omnius.Core.RocketPack.RocketMessageReader r, scoped in int rank)
        {
            if (rank > 256) throw new global::System.FormatException();

            global::Omnius.Core.RocketPack.Utf8String p_value = global::Omnius.Core.RocketPack.Utf8String.Empty;

            for (; ; )
            {
                uint id = r.GetUInt32();
                if (id == 0) break;
                switch (id)
                {
                    case 1:
                        {
                            p_value = r.GetString(8192);
                            break;
                        }
                }
            }

            return new global::Omnius.Axus.Engine.Models.AttachedProperty(p_value);
        }
    }
}

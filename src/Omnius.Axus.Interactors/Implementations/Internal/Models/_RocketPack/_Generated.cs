// <auto-generated/>
#nullable enable

namespace Omnius.Axus.Interactors.Internal.Models;

public sealed partial class CachedProfile : global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.CachedProfile>
{
    public static global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Axus.Interactors.Internal.Models.CachedProfile> Formatter => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.CachedProfile>.Formatter;
    public static global::Omnius.Axus.Interactors.Internal.Models.CachedProfile Empty => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.CachedProfile>.Empty;

    static CachedProfile()
    {
        global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.CachedProfile>.Formatter = new ___CustomFormatter();
        global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.CachedProfile>.Empty = new global::Omnius.Axus.Interactors.Internal.Models.CachedProfile(global::Omnius.Core.Cryptography.OmniSignature.Empty, global::Omnius.Core.RocketPack.Timestamp.Zero, global::Omnius.Axus.Interactors.Internal.Models.ProfileContent.Empty);
    }

    private readonly global::System.Lazy<int> ___hashCode;

    public CachedProfile(global::Omnius.Core.Cryptography.OmniSignature signature, global::Omnius.Core.RocketPack.Timestamp createdTime, global::Omnius.Axus.Interactors.Internal.Models.ProfileContent content)
    {
        if (signature is null) throw new global::System.ArgumentNullException("signature");
        if (content is null) throw new global::System.ArgumentNullException("content");

        this.Signature = signature;
        this.CreatedTime = createdTime;
        this.Content = content;

        ___hashCode = new global::System.Lazy<int>(() =>
        {
            var ___h = new global::System.HashCode();
            if (signature != default) ___h.Add(signature.GetHashCode());
            if (createdTime != default) ___h.Add(createdTime.GetHashCode());
            if (content != default) ___h.Add(content.GetHashCode());
            return ___h.ToHashCode();
        });
    }

    public global::Omnius.Core.Cryptography.OmniSignature Signature { get; }
    public global::Omnius.Core.RocketPack.Timestamp CreatedTime { get; }
    public global::Omnius.Axus.Interactors.Internal.Models.ProfileContent Content { get; }

    public static global::Omnius.Axus.Interactors.Internal.Models.CachedProfile Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
    {
        var reader = new global::Omnius.Core.RocketPack.RocketMessageReader(sequence, bytesPool);
        return Formatter.Deserialize(ref reader, 0);
    }
    public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
    {
        var writer = new global::Omnius.Core.RocketPack.RocketMessageWriter(bufferWriter, bytesPool);
        Formatter.Serialize(ref writer, this, 0);
    }

    public static bool operator ==(global::Omnius.Axus.Interactors.Internal.Models.CachedProfile? left, global::Omnius.Axus.Interactors.Internal.Models.CachedProfile? right)
    {
        return (right is null) ? (left is null) : right.Equals(left);
    }
    public static bool operator !=(global::Omnius.Axus.Interactors.Internal.Models.CachedProfile? left, global::Omnius.Axus.Interactors.Internal.Models.CachedProfile? right)
    {
        return !(left == right);
    }
    public override bool Equals(object? other)
    {
        if (other is not global::Omnius.Axus.Interactors.Internal.Models.CachedProfile) return false;
        return this.Equals((global::Omnius.Axus.Interactors.Internal.Models.CachedProfile)other);
    }
    public bool Equals(global::Omnius.Axus.Interactors.Internal.Models.CachedProfile? target)
    {
        if (target is null) return false;
        if (object.ReferenceEquals(this, target)) return true;
        if (this.Signature != target.Signature) return false;
        if (this.CreatedTime != target.CreatedTime) return false;
        if (this.Content != target.Content) return false;

        return true;
    }
    public override int GetHashCode() => ___hashCode.Value;

    private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Axus.Interactors.Internal.Models.CachedProfile>
    {
        public void Serialize(ref global::Omnius.Core.RocketPack.RocketMessageWriter w, in global::Omnius.Axus.Interactors.Internal.Models.CachedProfile value, in int rank)
        {
            if (rank > 256) throw new global::System.FormatException();

            if (value.Signature != global::Omnius.Core.Cryptography.OmniSignature.Empty)
            {
                w.Write((uint)1);
                global::Omnius.Core.Cryptography.OmniSignature.Formatter.Serialize(ref w, value.Signature, rank + 1);
            }
            if (value.CreatedTime != global::Omnius.Core.RocketPack.Timestamp.Zero)
            {
                w.Write((uint)2);
                w.Write(value.CreatedTime);
            }
            if (value.Content != global::Omnius.Axus.Interactors.Internal.Models.ProfileContent.Empty)
            {
                w.Write((uint)3);
                global::Omnius.Axus.Interactors.Internal.Models.ProfileContent.Formatter.Serialize(ref w, value.Content, rank + 1);
            }
            w.Write((uint)0);
        }
        public global::Omnius.Axus.Interactors.Internal.Models.CachedProfile Deserialize(ref global::Omnius.Core.RocketPack.RocketMessageReader r, in int rank)
        {
            if (rank > 256) throw new global::System.FormatException();

            global::Omnius.Core.Cryptography.OmniSignature p_signature = global::Omnius.Core.Cryptography.OmniSignature.Empty;
            global::Omnius.Core.RocketPack.Timestamp p_createdTime = global::Omnius.Core.RocketPack.Timestamp.Zero;
            global::Omnius.Axus.Interactors.Internal.Models.ProfileContent p_content = global::Omnius.Axus.Interactors.Internal.Models.ProfileContent.Empty;

            for (; ; )
            {
                uint id = r.GetUInt32();
                if (id == 0) break;
                switch (id)
                {
                    case 1:
                        {
                            p_signature = global::Omnius.Core.Cryptography.OmniSignature.Formatter.Deserialize(ref r, rank + 1);
                            break;
                        }
                    case 2:
                        {
                            p_createdTime = r.GetTimestamp();
                            break;
                        }
                    case 3:
                        {
                            p_content = global::Omnius.Axus.Interactors.Internal.Models.ProfileContent.Formatter.Deserialize(ref r, rank + 1);
                            break;
                        }
                }
            }

            return new global::Omnius.Axus.Interactors.Internal.Models.CachedProfile(p_signature, p_createdTime, p_content);
        }
    }
}
public sealed partial class ProfileContent : global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.ProfileContent>
{
    public static global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Axus.Interactors.Internal.Models.ProfileContent> Formatter => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.ProfileContent>.Formatter;
    public static global::Omnius.Axus.Interactors.Internal.Models.ProfileContent Empty => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.ProfileContent>.Empty;

    static ProfileContent()
    {
        global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.ProfileContent>.Formatter = new ___CustomFormatter();
        global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.ProfileContent>.Empty = new global::Omnius.Axus.Interactors.Internal.Models.ProfileContent(global::System.Array.Empty<global::Omnius.Core.Cryptography.OmniSignature>(), global::System.Array.Empty<global::Omnius.Core.Cryptography.OmniSignature>());
    }

    private readonly global::System.Lazy<int> ___hashCode;

    public static readonly int MaxTrustedSignaturesCount = 1024;
    public static readonly int MaxBlockedSignaturesCount = 1024;

    public ProfileContent(global::Omnius.Core.Cryptography.OmniSignature[] trustedSignatures, global::Omnius.Core.Cryptography.OmniSignature[] blockedSignatures)
    {
        if (trustedSignatures is null) throw new global::System.ArgumentNullException("trustedSignatures");
        if (trustedSignatures.Length > 1024) throw new global::System.ArgumentOutOfRangeException("trustedSignatures");
        foreach (var n in trustedSignatures)
        {
            if (n is null) throw new global::System.ArgumentNullException("n");
        }
        if (blockedSignatures is null) throw new global::System.ArgumentNullException("blockedSignatures");
        if (blockedSignatures.Length > 1024) throw new global::System.ArgumentOutOfRangeException("blockedSignatures");
        foreach (var n in blockedSignatures)
        {
            if (n is null) throw new global::System.ArgumentNullException("n");
        }

        this.TrustedSignatures = new global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Core.Cryptography.OmniSignature>(trustedSignatures);
        this.BlockedSignatures = new global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Core.Cryptography.OmniSignature>(blockedSignatures);

        ___hashCode = new global::System.Lazy<int>(() =>
        {
            var ___h = new global::System.HashCode();
            foreach (var n in trustedSignatures)
            {
                if (n != default) ___h.Add(n.GetHashCode());
            }
            foreach (var n in blockedSignatures)
            {
                if (n != default) ___h.Add(n.GetHashCode());
            }
            return ___h.ToHashCode();
        });
    }

    public global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Core.Cryptography.OmniSignature> TrustedSignatures { get; }
    public global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Core.Cryptography.OmniSignature> BlockedSignatures { get; }

    public static global::Omnius.Axus.Interactors.Internal.Models.ProfileContent Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
    {
        var reader = new global::Omnius.Core.RocketPack.RocketMessageReader(sequence, bytesPool);
        return Formatter.Deserialize(ref reader, 0);
    }
    public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
    {
        var writer = new global::Omnius.Core.RocketPack.RocketMessageWriter(bufferWriter, bytesPool);
        Formatter.Serialize(ref writer, this, 0);
    }

    public static bool operator ==(global::Omnius.Axus.Interactors.Internal.Models.ProfileContent? left, global::Omnius.Axus.Interactors.Internal.Models.ProfileContent? right)
    {
        return (right is null) ? (left is null) : right.Equals(left);
    }
    public static bool operator !=(global::Omnius.Axus.Interactors.Internal.Models.ProfileContent? left, global::Omnius.Axus.Interactors.Internal.Models.ProfileContent? right)
    {
        return !(left == right);
    }
    public override bool Equals(object? other)
    {
        if (other is not global::Omnius.Axus.Interactors.Internal.Models.ProfileContent) return false;
        return this.Equals((global::Omnius.Axus.Interactors.Internal.Models.ProfileContent)other);
    }
    public bool Equals(global::Omnius.Axus.Interactors.Internal.Models.ProfileContent? target)
    {
        if (target is null) return false;
        if (object.ReferenceEquals(this, target)) return true;
        if (!global::Omnius.Core.Helpers.CollectionHelper.Equals(this.TrustedSignatures, target.TrustedSignatures)) return false;
        if (!global::Omnius.Core.Helpers.CollectionHelper.Equals(this.BlockedSignatures, target.BlockedSignatures)) return false;

        return true;
    }
    public override int GetHashCode() => ___hashCode.Value;

    private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Axus.Interactors.Internal.Models.ProfileContent>
    {
        public void Serialize(ref global::Omnius.Core.RocketPack.RocketMessageWriter w, in global::Omnius.Axus.Interactors.Internal.Models.ProfileContent value, in int rank)
        {
            if (rank > 256) throw new global::System.FormatException();

            if (value.TrustedSignatures.Count != 0)
            {
                w.Write((uint)1);
                w.Write((uint)value.TrustedSignatures.Count);
                foreach (var n in value.TrustedSignatures)
                {
                    global::Omnius.Core.Cryptography.OmniSignature.Formatter.Serialize(ref w, n, rank + 1);
                }
            }
            if (value.BlockedSignatures.Count != 0)
            {
                w.Write((uint)2);
                w.Write((uint)value.BlockedSignatures.Count);
                foreach (var n in value.BlockedSignatures)
                {
                    global::Omnius.Core.Cryptography.OmniSignature.Formatter.Serialize(ref w, n, rank + 1);
                }
            }
            w.Write((uint)0);
        }
        public global::Omnius.Axus.Interactors.Internal.Models.ProfileContent Deserialize(ref global::Omnius.Core.RocketPack.RocketMessageReader r, in int rank)
        {
            if (rank > 256) throw new global::System.FormatException();

            global::Omnius.Core.Cryptography.OmniSignature[] p_trustedSignatures = global::System.Array.Empty<global::Omnius.Core.Cryptography.OmniSignature>();
            global::Omnius.Core.Cryptography.OmniSignature[] p_blockedSignatures = global::System.Array.Empty<global::Omnius.Core.Cryptography.OmniSignature>();

            for (; ; )
            {
                uint id = r.GetUInt32();
                if (id == 0) break;
                switch (id)
                {
                    case 1:
                        {
                            var length = r.GetUInt32();
                            p_trustedSignatures = new global::Omnius.Core.Cryptography.OmniSignature[length];
                            for (int i = 0; i < p_trustedSignatures.Length; i++)
                            {
                                p_trustedSignatures[i] = global::Omnius.Core.Cryptography.OmniSignature.Formatter.Deserialize(ref r, rank + 1);
                            }
                            break;
                        }
                    case 2:
                        {
                            var length = r.GetUInt32();
                            p_blockedSignatures = new global::Omnius.Core.Cryptography.OmniSignature[length];
                            for (int i = 0; i < p_blockedSignatures.Length; i++)
                            {
                                p_blockedSignatures[i] = global::Omnius.Core.Cryptography.OmniSignature.Formatter.Deserialize(ref r, rank + 1);
                            }
                            break;
                        }
                }
            }

            return new global::Omnius.Axus.Interactors.Internal.Models.ProfileContent(p_trustedSignatures, p_blockedSignatures);
        }
    }
}
public sealed partial class BarkContents : global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.BarkContents>
{
    public static global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Axus.Interactors.Internal.Models.BarkContents> Formatter => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.BarkContents>.Formatter;
    public static global::Omnius.Axus.Interactors.Internal.Models.BarkContents Empty => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.BarkContents>.Empty;

    static BarkContents()
    {
        global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.BarkContents>.Formatter = new ___CustomFormatter();
        global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.BarkContents>.Empty = new global::Omnius.Axus.Interactors.Internal.Models.BarkContents(global::System.Array.Empty<global::Omnius.Axus.Interactors.Internal.Models.BarkContent>());
    }

    private readonly global::System.Lazy<int> ___hashCode;

    public static readonly int MaxContentsCount = 32768;

    public BarkContents(global::Omnius.Axus.Interactors.Internal.Models.BarkContent[] contents)
    {
        if (contents is null) throw new global::System.ArgumentNullException("contents");
        if (contents.Length > 32768) throw new global::System.ArgumentOutOfRangeException("contents");
        foreach (var n in contents)
        {
            if (n is null) throw new global::System.ArgumentNullException("n");
        }

        this.Contents = new global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Axus.Interactors.Internal.Models.BarkContent>(contents);

        ___hashCode = new global::System.Lazy<int>(() =>
        {
            var ___h = new global::System.HashCode();
            foreach (var n in contents)
            {
                if (n != default) ___h.Add(n.GetHashCode());
            }
            return ___h.ToHashCode();
        });
    }

    public global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Axus.Interactors.Internal.Models.BarkContent> Contents { get; }

    public static global::Omnius.Axus.Interactors.Internal.Models.BarkContents Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
    {
        var reader = new global::Omnius.Core.RocketPack.RocketMessageReader(sequence, bytesPool);
        return Formatter.Deserialize(ref reader, 0);
    }
    public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
    {
        var writer = new global::Omnius.Core.RocketPack.RocketMessageWriter(bufferWriter, bytesPool);
        Formatter.Serialize(ref writer, this, 0);
    }

    public static bool operator ==(global::Omnius.Axus.Interactors.Internal.Models.BarkContents? left, global::Omnius.Axus.Interactors.Internal.Models.BarkContents? right)
    {
        return (right is null) ? (left is null) : right.Equals(left);
    }
    public static bool operator !=(global::Omnius.Axus.Interactors.Internal.Models.BarkContents? left, global::Omnius.Axus.Interactors.Internal.Models.BarkContents? right)
    {
        return !(left == right);
    }
    public override bool Equals(object? other)
    {
        if (other is not global::Omnius.Axus.Interactors.Internal.Models.BarkContents) return false;
        return this.Equals((global::Omnius.Axus.Interactors.Internal.Models.BarkContents)other);
    }
    public bool Equals(global::Omnius.Axus.Interactors.Internal.Models.BarkContents? target)
    {
        if (target is null) return false;
        if (object.ReferenceEquals(this, target)) return true;
        if (!global::Omnius.Core.Helpers.CollectionHelper.Equals(this.Contents, target.Contents)) return false;

        return true;
    }
    public override int GetHashCode() => ___hashCode.Value;

    private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Axus.Interactors.Internal.Models.BarkContents>
    {
        public void Serialize(ref global::Omnius.Core.RocketPack.RocketMessageWriter w, in global::Omnius.Axus.Interactors.Internal.Models.BarkContents value, in int rank)
        {
            if (rank > 256) throw new global::System.FormatException();

            if (value.Contents.Count != 0)
            {
                w.Write((uint)1);
                w.Write((uint)value.Contents.Count);
                foreach (var n in value.Contents)
                {
                    global::Omnius.Axus.Interactors.Internal.Models.BarkContent.Formatter.Serialize(ref w, n, rank + 1);
                }
            }
            w.Write((uint)0);
        }
        public global::Omnius.Axus.Interactors.Internal.Models.BarkContents Deserialize(ref global::Omnius.Core.RocketPack.RocketMessageReader r, in int rank)
        {
            if (rank > 256) throw new global::System.FormatException();

            global::Omnius.Axus.Interactors.Internal.Models.BarkContent[] p_contents = global::System.Array.Empty<global::Omnius.Axus.Interactors.Internal.Models.BarkContent>();

            for (; ; )
            {
                uint id = r.GetUInt32();
                if (id == 0) break;
                switch (id)
                {
                    case 1:
                        {
                            var length = r.GetUInt32();
                            p_contents = new global::Omnius.Axus.Interactors.Internal.Models.BarkContent[length];
                            for (int i = 0; i < p_contents.Length; i++)
                            {
                                p_contents[i] = global::Omnius.Axus.Interactors.Internal.Models.BarkContent.Formatter.Deserialize(ref r, rank + 1);
                            }
                            break;
                        }
                }
            }

            return new global::Omnius.Axus.Interactors.Internal.Models.BarkContents(p_contents);
        }
    }
}
public sealed partial class BarkContent : global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.BarkContent>
{
    public static global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Axus.Interactors.Internal.Models.BarkContent> Formatter => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.BarkContent>.Formatter;
    public static global::Omnius.Axus.Interactors.Internal.Models.BarkContent Empty => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.BarkContent>.Empty;

    static BarkContent()
    {
        global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.BarkContent>.Formatter = new ___CustomFormatter();
        global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Axus.Interactors.Internal.Models.BarkContent>.Empty = new global::Omnius.Axus.Interactors.Internal.Models.BarkContent(global::Omnius.Core.RocketPack.Utf8String.Empty, global::Omnius.Core.RocketPack.Timestamp.Zero, global::Omnius.Core.RocketPack.Utf8String.Empty, global::Omnius.Axus.Interactors.Models.BarkReply.Empty);
    }

    private readonly global::System.Lazy<int> ___hashCode;

    public static readonly int MaxTagLength = 256;
    public static readonly int MaxCommentLength = 1024;

    public BarkContent(global::Omnius.Core.RocketPack.Utf8String tag, global::Omnius.Core.RocketPack.Timestamp createdTime, global::Omnius.Core.RocketPack.Utf8String comment, global::Omnius.Axus.Interactors.Models.BarkReply reply)
    {
        if (tag is null) throw new global::System.ArgumentNullException("tag");
        if (tag.Length > 256) throw new global::System.ArgumentOutOfRangeException("tag");
        if (comment is null) throw new global::System.ArgumentNullException("comment");
        if (comment.Length > 1024) throw new global::System.ArgumentOutOfRangeException("comment");
        if (reply is null) throw new global::System.ArgumentNullException("reply");

        this.Tag = tag;
        this.CreatedTime = createdTime;
        this.Comment = comment;
        this.Reply = reply;

        ___hashCode = new global::System.Lazy<int>(() =>
        {
            var ___h = new global::System.HashCode();
            if (!tag.IsEmpty) ___h.Add(tag.GetHashCode());
            if (createdTime != default) ___h.Add(createdTime.GetHashCode());
            if (!comment.IsEmpty) ___h.Add(comment.GetHashCode());
            if (reply != default) ___h.Add(reply.GetHashCode());
            return ___h.ToHashCode();
        });
    }

    public global::Omnius.Core.RocketPack.Utf8String Tag { get; }
    public global::Omnius.Core.RocketPack.Timestamp CreatedTime { get; }
    public global::Omnius.Core.RocketPack.Utf8String Comment { get; }
    public global::Omnius.Axus.Interactors.Models.BarkReply Reply { get; }

    public static global::Omnius.Axus.Interactors.Internal.Models.BarkContent Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
    {
        var reader = new global::Omnius.Core.RocketPack.RocketMessageReader(sequence, bytesPool);
        return Formatter.Deserialize(ref reader, 0);
    }
    public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
    {
        var writer = new global::Omnius.Core.RocketPack.RocketMessageWriter(bufferWriter, bytesPool);
        Formatter.Serialize(ref writer, this, 0);
    }

    public static bool operator ==(global::Omnius.Axus.Interactors.Internal.Models.BarkContent? left, global::Omnius.Axus.Interactors.Internal.Models.BarkContent? right)
    {
        return (right is null) ? (left is null) : right.Equals(left);
    }
    public static bool operator !=(global::Omnius.Axus.Interactors.Internal.Models.BarkContent? left, global::Omnius.Axus.Interactors.Internal.Models.BarkContent? right)
    {
        return !(left == right);
    }
    public override bool Equals(object? other)
    {
        if (other is not global::Omnius.Axus.Interactors.Internal.Models.BarkContent) return false;
        return this.Equals((global::Omnius.Axus.Interactors.Internal.Models.BarkContent)other);
    }
    public bool Equals(global::Omnius.Axus.Interactors.Internal.Models.BarkContent? target)
    {
        if (target is null) return false;
        if (object.ReferenceEquals(this, target)) return true;
        if (this.Tag != target.Tag) return false;
        if (this.CreatedTime != target.CreatedTime) return false;
        if (this.Comment != target.Comment) return false;
        if (this.Reply != target.Reply) return false;

        return true;
    }
    public override int GetHashCode() => ___hashCode.Value;

    private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Axus.Interactors.Internal.Models.BarkContent>
    {
        public void Serialize(ref global::Omnius.Core.RocketPack.RocketMessageWriter w, in global::Omnius.Axus.Interactors.Internal.Models.BarkContent value, in int rank)
        {
            if (rank > 256) throw new global::System.FormatException();

            if (value.Tag != global::Omnius.Core.RocketPack.Utf8String.Empty)
            {
                w.Write((uint)1);
                w.Write(value.Tag);
            }
            if (value.CreatedTime != global::Omnius.Core.RocketPack.Timestamp.Zero)
            {
                w.Write((uint)2);
                w.Write(value.CreatedTime);
            }
            if (value.Comment != global::Omnius.Core.RocketPack.Utf8String.Empty)
            {
                w.Write((uint)3);
                w.Write(value.Comment);
            }
            if (value.Reply != global::Omnius.Axus.Interactors.Models.BarkReply.Empty)
            {
                w.Write((uint)4);
                global::Omnius.Axus.Interactors.Models.BarkReply.Formatter.Serialize(ref w, value.Reply, rank + 1);
            }
            w.Write((uint)0);
        }
        public global::Omnius.Axus.Interactors.Internal.Models.BarkContent Deserialize(ref global::Omnius.Core.RocketPack.RocketMessageReader r, in int rank)
        {
            if (rank > 256) throw new global::System.FormatException();

            global::Omnius.Core.RocketPack.Utf8String p_tag = global::Omnius.Core.RocketPack.Utf8String.Empty;
            global::Omnius.Core.RocketPack.Timestamp p_createdTime = global::Omnius.Core.RocketPack.Timestamp.Zero;
            global::Omnius.Core.RocketPack.Utf8String p_comment = global::Omnius.Core.RocketPack.Utf8String.Empty;
            global::Omnius.Axus.Interactors.Models.BarkReply p_reply = global::Omnius.Axus.Interactors.Models.BarkReply.Empty;

            for (; ; )
            {
                uint id = r.GetUInt32();
                if (id == 0) break;
                switch (id)
                {
                    case 1:
                        {
                            p_tag = r.GetString(256);
                            break;
                        }
                    case 2:
                        {
                            p_createdTime = r.GetTimestamp();
                            break;
                        }
                    case 3:
                        {
                            p_comment = r.GetString(1024);
                            break;
                        }
                    case 4:
                        {
                            p_reply = global::Omnius.Axus.Interactors.Models.BarkReply.Formatter.Deserialize(ref r, rank + 1);
                            break;
                        }
                }
            }

            return new global::Omnius.Axus.Interactors.Internal.Models.BarkContent(p_tag, p_createdTime, p_comment, p_reply);
        }
    }
}

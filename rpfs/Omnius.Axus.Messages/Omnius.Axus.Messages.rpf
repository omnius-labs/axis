syntax v1.0;

using "Omnius.Core.Cryptography";
using "Omnius.Core.Net";

namespace "Omnius.Axus.Messages";

// Common

message NodeLocation {
    Addresses: vector<OmniAddress>(capacity: 32),
}

message Shout {
    Channel: string(capacity: 256),
    CreatedTime: timestamp64,
    Value: bytes(capacity: 32 * 1024 * 1024, recyclable: true),
    Certificate: OmniCertificate?,
}

message AttachedProperty {
    Name: string(capacity: 256),
    Value: bytes(capacity: 32 * 1024),
}

// Report

message ConsistencyReport {
    BadBlockCount: uint32,
    CheckedBlockCount: uint32,
    TotalBlockCount: uint32,
}

message SessionReport {
    Scheme: string(capacity: 256),
    HandshakeType: SessionHandshakeType,
    Address: OmniAddress,
}

enum SessionHandshakeType : uint8 {
    Unknown = 0,
    Connected = 1,
    Accepted = 2,
}

message PublishedFileReport {
    FilePath: string?,
    RootHash: OmniHash?,
    Properties: vector<AttachedProperty>(capacity: 256),
}

message SubscribedFileReport {
    RootHash: OmniHash,
    Status: SubscribedFileStatus,
    Properties: vector<AttachedProperty>(capacity: 256),
}

message SubscribedFileStatus {
    CurrentDepth: int32,
    DownloadedBlockCount: uint32,
    TotalBlockCount: uint32,
    State: SubscribedFileState,
}

enum SubscribedFileState : uint8 {
    Unknown = 0,
    Downloading = 1,
    Downloaded = 2,
    Failed = 3,
}

message PublishedShoutReport {
    Signature: OmniSignature,
    Channel: string,
    CreatedTime: timestamp64,
    Properties: vector<AttachedProperty>(capacity: 256),
}

message SubscribedShoutReport {
    Signature: OmniSignature,
    Channel: string,
    CreatedTime: timestamp64,
    Properties: vector<AttachedProperty>(capacity: 256),
}
